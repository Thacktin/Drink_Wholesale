@using Drink_Wholesale.ViewModels
@using Drink_Wholesale.Helpers
@model Drink_Wholesale.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Product</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product!.Producer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product!.Producer)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product!.ArtNo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product!.ArtNo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product!.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product!.Description)
        </dd>
        @*         <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.SubCategory)
        </dt>
        <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.SubCategory.Name)
        </dd> *@
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product!.NetPrice)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product!.NetPrice)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GrossPrice)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GrossPrice)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product!.Inventory)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product!.Inventory)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product!.Packaging)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product!.Packaging)
        </dd>
    </dl>

    @*     @using (Html.BeginForm(routeValues: new RouteValueDictionary { { "product", Model.Product } }))
    {
    @*         <div>
    @Html.TextBoxFor()
    </div> *@
    @* <select asp-for="Product.Packaging" asp-items="Html.GetEnumSelectList<Packaging>()"></select>
    @Html.DropDownListFor(m => m.SelectedPackaging, new SelectList(Enum.GetValues(typeof(Packaging))))

    <input type="submit" value="order" />
    } *@

    <form asp-controller="Products" asp-action="Details" asp-route-productId="@Model.Product!.Id">
        @* @Html.DropDownListFor(m => m.SelectedPackaging, new SelectList(Enum.GetValues(typeof(Packaging)))) *@
        <div asp-validation-summary="ModelOnly" class="failureNotification"></div>
        <table>
            <tbody>
            <tr>
                <th>Mennyiség: </th>
                <td class="failureNotification">
                    <input asp-for="Quantity" value="1" min="1" max="@Model.Product!.Inventory" type="number" />
                    <span asp-validation-for="Quantity"></span>
                </td>
            </tr>
            <tr>
                <th>Kiszerelés</th>
                <td>
                    @Html.DropDownListFor(m => m.SelectedPackaging, EnumHelpers.ToSelectList(EnumHelpers.ToEnumList(Model.Product.Packaging)))
                    <span asp-validation-for="SelectedPackaging"></span>
                </td>
            </tr>
            <tr>
                <td>
                    <input type="submit" value="Order" />
                </td>
            </tr>

            </tbody>
        </table>





    </form>
    <h2>
        @ViewData["OrderResult"]
    </h2>
</div>
<div>
    @* <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> | *@
    <a asp-controller="SubCategories" asp-action="Details" asp-route-id="@Model.Product.SubCategoryId">Back to List</a>

</div>
